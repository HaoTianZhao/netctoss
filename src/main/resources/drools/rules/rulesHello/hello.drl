//包名必须是该文件的路径
package drools.rules.rulesHello
import com.zhilingsd.qi.business.storage.mysql.model.QiCommonRuleScoreRules
import com.barista.util.FileUtil
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.math.BigDecimal
import com.barista.entity.Bill
import com.barista.entity.Cost;

    rule "test001"
    activation-group "group"
        when
//            $b:Bill(payState memberOf Arrays.asList(payState.split("")))
//            $b:Bill(date < "2020-11-24 00:00:00")
            $b:Bill(cost > 1 && cost < 200);
        then
            System.out.println("hello world");
        end

    rule "test002"
    activation-group "group"
        when
            $b:Bill(payState=="已还款" || (cost%2) == 1);
            $c:Cost();
        then
            $b.setCost(new BigDecimal(30.0));
            $c.setCostName("更改了costName");
// 如果是改值,加上这步操作,改动才会生效,这会导致全部规则重新执行 如果是修改引用对象内容,就不需要
//            update($b);
            System.out.printf("输出规则文件中的引用对象%s, 并将花费改为30.0, 现在cost的值%f%n", $b, $b.getCost().doubleValue());
        end

    rule "test003"
//        no-loop true //默认false.说是防止update触发的循环,但是"test003"触发到了"test002"还是会死循环,少写update为妙
//        ruleflow-group "" //分为rule,flow,group三个部分,分别代表规则,流程,分组, 即常说的规则流
//        lock-on-active true //默认false.锁定活跃,当ruleflow-group,agenda-group,update再次被激活时,锁定活跃可以保证当前规则只被激活一次
//        salience 0 //默认0.整数,可以为负,支持表达式,数值越大,规则越先被执行.
//        enabled true //默认true.指规则是否可以被执行
//        dialect "" //可选值:Java或Mvel.用来定义规则中要使用的语言类型
//        date-effective "07-August-2018" //默认格式dd-MMM-yyyy.当前系统时间大于等于设置时间时,规则才可以被执行.  如果要更改格式,需要在初始化KIE相关代码前添加代码 System.setProperty("drools.dateformat","yyyy-MM-dd HH:mm:ss")
//        date-expires "" //与date-effective相反,即小于时才可以执行
//        activation-group "" //激活分组,类似于规则流程中的XOR网关.通过定义的分组名称,具有相同组名的规则最多只有一个被激活(第一个LHS为true的规则)
//        agenda-group "ag1" //议程分组.指用户可以通过java代码设置值来控制哪个agenda-group获取焦点,只有获取焦点的规则才能被激活. 如:kieSession.getAgenda().getAgendaGroup("ag1").setFocus();
//        auto-focus true //默认false.自动获取焦点.一般结合agenda-group使用
//        timer (int: 3s 4s; start=3-JAN-2018, end=5-JAN=2018) //定时执行.支持使用定义变量.有两种写法,1.(int: <initial delay> <report interval>?) 2.(cron <expression>)

        when
            $b:Bill(cost==30.0);
        then
            System.out.println("cost现在是30");
        end