<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
    PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
    "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- defaultModelType="flat" 设置复合主键时不单独为主键创建实体 -->
    <context id="default" defaultModelType="flat">
        <!--前后生成反引号-->
        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value='"'/>
        <property name="endingDelimiter" value='"'/>

        <!-- 生成的POJO实现java.io.Serializable接口 -->
        <!--<plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->

        <!--注释-->
        <commentGenerator>
            <property name="trimStrings" value="true"/>
            <!-- 注释里不添加日期 -->
            <property name="suppressDate" value="true"/>
            <!-- 不去除注释时,注释中会有@mbggenerated注解,有该注解的部分会在插件重新运行时先删除,防止mapper中出现追加情况 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 将数据库中表的字段描述信息添加到注释 -->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- 数据库连接 本地-->
        <!--        <jdbcConnection
                    driverClass="com.mysql.cj.jdbc.Driver"
                    connectionURL="jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai&amp;characterEncoding=utf8
                &amp;useSSL=false&amp;nullNamePatternMatchesAll=true&amp;nullCatalogMeansCurrent=true"
                    userId="root"
                    password="123123"/>

                <jdbcConnection
                    driverClass="com.mysql.cj.jdbc.Driver"
                    connectionURL="jdbc:mysql://192.168.18.225:3313/asset_decisionengine?serverTimezone=Asia/Shanghai&amp;characterEncoding=utf8
                &amp;useSSL=false&amp;nullNamePatternMatchesAll=true&amp;nullCatalogMeansCurrent=true"
                    userId="rw"
                    password="zlsdRW@2019"/>-->
        <!--数据库连接 开发环境-->
        <jdbcConnection
            driverClass="oracle.jdbc.driver.OracleDriver"
            connectionURL="jdbc:oracle:thin:@192.168.18.231:1522/zlsd"
            userId="asset"
            password="Asset.2020">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver type="com.mybatisGenerator.resolver.OracleBigintResolver"/>
        <!--<javaTypeResolver>-->
        <!--<property name="forceBigDecimals" value="true"/>-->
        <!--</javaTypeResolver>-->

        <!-- 生成POJO对象，并将类放到com.barista.entity包下 -->
        <javaModelGenerator targetPackage="com.zhilingsd.asset.manage.decisionengine.dal.model"
                            targetProject="src/main/java">
            <!-- (会影响mapper的resultMap标签.从id,result形式,变为constructor,arg形式) 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
        </javaModelGenerator>

        <!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 -->
        <sqlMapGenerator targetPackage="mybatis"
                         targetProject="src/main/resources"></sqlMapGenerator>

        <!-- 生成mapper xml对应dao接口，放到com.barista.dao-->
        <!-- type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
             type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
             type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator targetPackage="com.zhilingsd.asset.manage.decisionengine.dal.mapper" targetProject="src/main/java"
                             type="XMLMAPPER"></javaClientGenerator>

        <!--table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符, tableName="%"生成所有表-->

        <table tableName="ST_ALLOCATION_ENGINE" domainObjectName="AllocationEngine">
        </table>
        <table tableName="ST_DECISION_RULE" domainObjectName="DecisionRule"></table>
        <!--<table tableName="ST_allocation_flow_del" domainObjectName="AllocationFlow"></table>-->
        <table tableName="ST_strategy_condition" domainObjectName="StrategyCondition"></table>
        <table tableName="ST_strategy_condition_rule" domainObjectName="StrategyConditionRule"></table>
        <table tableName="ST_strategy_queue" domainObjectName="StrategyQueue"></table>
        <table tableName="ST_strategy_call_allocation" domainObjectName="StrategyCallAllocation"></table>
        <table tableName="ST_strategy_call_package" domainObjectName="StrategyCallPackage"></table>
        <table tableName="ST_strategy_call_pool" domainObjectName="StrategyCallPool"></table>
        <table tableName="ST_strategy_group_weight" domainObjectName="StrategyGroupWeight"></table>
        <table tableName="ST_strategy_justice" domainObjectName="StrategyJustice"></table>
        <table tableName="ST_strategy_sms" domainObjectName="StrategySms"></table>
        <table tableName="ST_strategy_mail" domainObjectName="StrategyMail"></table>
        <table tableName="ST_strategy_outsource" domainObjectName="StrategyOutsource">
        </table>
        <table tableName="ST_strategy_outsource_weight" domainObjectName="StrategyOutsourceWeight"></table>
        <table tableName="ST_strategy_queue_rel" domainObjectName="StrategyQueueRel"></table>
        <table tableName="ST_strategy_task" domainObjectName="StrategyTask"></table>
        <table tableName="ST_task_call" domainObjectName="TaskCall"></table>
        <table tableName="ST_task_allocation" domainObjectName="TaskAllocation"></table>
        <table tableName="ST_task_first_call" domainObjectName="TaskFirstCall"></table>
        <table tableName="ST_task_justice" domainObjectName="TaskJustice"></table>
        <table tableName="ST_task_outsource" domainObjectName="TaskOutsource"></table>
        <table tableName="ST_queue_bill" domainObjectName="QueueBill"></table>
        <table tableName="ST_task_second_call" domainObjectName="TaskSecondCall"></table>
        <table tableName="ST_task_sms" domainObjectName="TaskSms"></table>
        <table tableName="ST_task_group_rel" domainObjectName="TaskGroupRel"></table>
        <table tableName="ST_task_condition_rule" domainObjectName="TaskConditionRule"></table>
        <table tableName="ST_variate_factor" domainObjectName="VariateFactor"></table>


        <!--
                <table tableName="qi_common_rule_score_rules">
                    &lt;!&ndash;覆盖字段命名&ndash;&gt;
                    <columnOverride column="strategy_type" property="type"/>
                    <generatedKey column="id" sqlStatement="JDBC"/>
                    &lt;!&ndash;是否只生成POJO对象&ndash;&gt;
                    <property name="modelOnly" value="true"/>

                    <ignoreColumn column="srctb" delimitedColumnName="false"/>
                    <ignoreColumn column="srctbpk" delimitedColumnName="false"/>

                    &lt;!&ndash;将时间转换为LocalDateTime&ndash;&gt;
                    <columnOverride column="birthday" property="birthday"
                                    typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"
                                    jdbcType="OTHER" javaType="java.time.LocalDateTime"/>
                </table>
                <table tableName="bill_phone_record_info_back" domainObjectName="BillPhoneRecordInfoBack">
                </table>
                <table tableName="bill_visit_record_info_back" domainObjectName="BillVisitRecordInfoBack">
                </table>
        -->

        <!--
                <table tableName="admin_info" domainObjectName="AdminInfo"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false"
                       enableSelectByExample="false" selectByExampleQueryId="false">
                    <property name="modelOnly" value="false"/>
                    &lt;!&ndash; 这个用于不自增时查询最后的id(好像oracle才需要) &ndash;&gt;
                    &lt;!&ndash; <generatedKey column="admin_id" sqlStatement="select LAST_INSERT_ID() from tablename"/> &ndash;&gt;
                </table>
        -->

    </context>
</generatorConfiguration>