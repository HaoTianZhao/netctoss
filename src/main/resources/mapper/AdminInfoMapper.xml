<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.barista.dao.AdminInfoMapper">
    <resultMap id="BaseResultMap" type="com.barista.entity.AdminInfo">
        <constructor>
            <idArg column="admin_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="admin_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="admin_password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="admin_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="admin_telephone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="admin_email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="admin_enrolldate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        admin_id, admin_code, admin_password, admin_name, admin_telephone, admin_email, admin_enrolldate
    </sql>
    <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">-->
        <!--select-->
        <!--<include refid="Base_Column_List"/>-->
        <!--from admin_info-->
        <!--where admin_id = #{adminId,jdbcType=INTEGER}-->
    <!--</select>-->

    <select id="selectByAdminCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from admin_info
        where admin_code = #{adminId,jdbcType=VARCHAR}
    </select>

    <select id="selectCount" resultType="integer">
        select count(*)
        from admin_info
    </select>

    <select id="selectPaging" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from admin_info order by admin_id limit
        #{begin, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from admin_info
        where admin_id = #{adminId,jdbcType=INTEGER}
    </delete>
    <!--<insert id="insert" parameterType="com.barista.entity.AdminInfo" keyProperty="adminId"-->
            <!--useGeneratedKeys="true">-->
        <!--insert into admin_info (admin_id, admin_code, admin_password,-->
                                <!--admin_name, admin_telephone, admin_email,-->
                                <!--admin_enrolldate)-->
        <!--values (#{adminId,jdbcType=INTEGER}, #{adminCode,jdbcType=VARCHAR},-->
                <!--#{adminPassword,jdbcType=VARCHAR},-->
                <!--#{adminName,jdbcType=VARCHAR}, #{adminTelephone,jdbcType=VARCHAR},-->
                <!--#{adminEmail,jdbcType=VARCHAR},-->
                <!--now())-->
    <!--</insert>-->
    <insert id="insertSelective" parameterType="com.barista.entity.AdminInfo" keyProperty="adminId"
            useGeneratedKeys="true">
        insert into admin_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="adminCode != null">
                admin_code,
            </if>
            <if test="adminPassword != null">
                admin_password,
            </if>
            <if test="adminName != null">
                admin_name,
            </if>
            <if test="adminTelephone != null">
                admin_telephone,
            </if>
            <if test="adminEmail != null">
                admin_email,
            </if>
            admin_enrolldate
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="adminCode != null">
                #{adminCode,jdbcType=VARCHAR},
            </if>
            <if test="adminPassword != null">
                #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminTelephone != null">
                #{adminTelephone,jdbcType=VARCHAR},
            </if>
            <if test="adminEmail != null">
                #{adminEmail,jdbcType=VARCHAR},
            </if>
            now()
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.barista.entity.AdminInfo">
        update admin_info
        <set>
            <if test="adminId != null">
                admin_id = #{adminId,jdbcType=INTEGER},
            </if>
            <if test="adminCode != null">
                admin_code = #{adminCode,jdbcType=VARCHAR},
            </if>
            <if test="adminPassword != null">
                admin_password = #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                admin_name = #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminTelephone != null">
                admin_telephone = #{adminTelephone,jdbcType=VARCHAR},
            </if>
            <if test="adminEmail != null">
                admin_email = #{adminEmail,jdbcType=VARCHAR},
            </if>
        </set>
        where admin_id = #{adminId,jdbcType=INTEGER}
    </update>
    <update id="updatePartInfoByAdminCodeSelective" parameterType="com.barista.entity.AdminInfo">
        update admin_info
        <set>
            <if test="adminPassword != null">
                admin_password = #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                admin_name = #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminTelephone != null">
                admin_telephone = #{adminTelephone,jdbcType=VARCHAR},
            </if>
            <if test="adminEmail != null">
                admin_email = #{adminEmail,jdbcType=VARCHAR},
            </if>
        </set>
        where admin_code = #{adminCode,jdbcType=INTEGER}
    </update>
    <!--<update id="updateByPrimaryKey" parameterType="com.barista.entity.AdminInfo">-->
        <!--update admin_info-->
        <!--set admin_code      = #{adminCode,jdbcType=VARCHAR},-->
            <!--admin_password  = #{adminPassword,jdbcType=VARCHAR},-->
            <!--admin_name      = #{adminName,jdbcType=VARCHAR},-->
            <!--admin_telephone = #{adminTelephone,jdbcType=VARCHAR},-->
            <!--admin_email     = #{adminEmail,jdbcType=VARCHAR}-->
        <!--where admin_id = #{adminId,jdbcType=INTEGER}-->
    <!--</update>-->
    <update id="resetPasswords" parameterType="list">
        update admin_info
        set admin_password = case admin_id
        <foreach collection="list" item="item">
            when #{item.id, jdbcType=INTEGER} then #{item.password, jdbcType=VARCHAR}
        </foreach>
        end
        where admin_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id, jdbcType=INTEGER}
        </foreach>
    </update>
</mapper>