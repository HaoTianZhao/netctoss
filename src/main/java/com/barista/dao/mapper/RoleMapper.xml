<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.barista.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.barista.entity.Role">
        <constructor>
            <idArg column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        role_id, role_name
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="selectByRoleIds" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id in
        <foreach collection="list" item="roleId" index="index"
                 open="(" close=")" separator=",">
            #{roleId,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectCount" resultType="integer">
        select count(*)
        from role
    </select>

    <select id="selectPaging" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from role order by role_id limit #{begin, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role order by role_id
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.barista.entity.Role">
        insert into role (role_id, role_name)
        values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.barista.entity.Role" keyProperty="roleId" useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.barista.entity.Role">
        update role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.barista.entity.Role">
        update role
        set role_name = #{roleName,jdbcType=VARCHAR}
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
</mapper>